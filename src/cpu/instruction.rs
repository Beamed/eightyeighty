use super::register::{Register, RegisterPair, RegisterOp, RegisterPairOp};
use super::condition::{Condition, ConditionOpCode};
use super::{Address, Port};

pub type Word = u8;

#[derive(Debug, PartialEq, Eq, Hash)]
pub enum Instruction {
    MOV(Register, Register),
    MVI(Register, u8),
    LXI(RegisterPair, (u8, u8)),
    LDA(Address),
    STA(Address),
    LHLD(Address),
    SHLD(Address),
    LDAX(RegisterPair),
    STAX(RegisterPair),
    XCHG,
    ADD(Register),
    ADI(u8),
    ADC(Register),
    ACI(u8),
    SUB(Register),
    SUI(u8),
    SBB(Register),
    SBI(u8),
    INR(Register),
    DCR(Register),
    INX(RegisterPair),
    DCX(RegisterPair),
    DAD(RegisterPair),
    DAA,
    ANA(Register),
    ANI(u8),
    ORA(Register),
    ORI(u8),
    XRA(Register),
    XRI(u8),
    CMP(Register),
    CPI(u8),
    RLC,
    RRC,
    RAL,
    RAR,
    RIM,
    RETCOND(Condition),
    RET,
    SIM,
    CMA,
    CMC,
    STC,
    JMP(Address),
    JCOND(Condition, Address),
    CALL(Address),
    CCOND(Condition, Address),
    RST(u8),
    PCHL,
    PUSH(RegisterPair),
    PUSH_PSW,
    POP(RegisterPair),
    POP_PSW,
    XTHL,
    SPHL,
    IN(Port),
    OUT(Port),
    EI,
    DI,
    HLT,
    NOP,
}